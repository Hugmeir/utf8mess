=encoding utf8

=head1 NAME

[ this is a template for a new perldelta file.  Any text flagged as XXX needs
to be processed before release. ]

perldelta - what is new for perl v5.19.4

=head1 DESCRIPTION

This document describes differences between the 5.19.3 release and the 5.19.4
release.

If you are upgrading from an earlier release such as 5.19.2, first read
L<perl5193delta>, which describes differences between 5.19.2 and 5.19.3.

=head1 Notice

XXX Any important notices here

=head1 Core Enhancements

XXX New core language features go here.  Summarize user-visible core language
enhancements.  Particularly prominent performance optimisations could go
here, but most should go in the L</Performance Enhancements> section.

[ List each enhancement as a =head2 entry ]

=head1 Security

XXX Any security-related notices go here.  In particular, any security
vulnerabilities closed should be noted here rather than in the
L</Selected Bug Fixes> section.

[ List each security issue as a =head2 entry ]

=head1 Incompatible Changes

XXX For a release on a stable branch, this section aspires to be:

    There are no changes intentionally incompatible with 5.XXX.XXX
    If any exist, they are bugs, and we request that you submit a
    report.  See L</Reporting Bugs> below.

[ List each incompatible change as a =head2 entry ]

=head1 Deprecations

=head2 Literal control characters in variable names

This deprecation affects things like C<$\cT>, where \cT is a literal
control in the source code.  Surprisingly, it appears that originally
this was intended as the canonical way of accessing variables like
C<$^T>, with the caret form only being added as an alternative.

The literal control form is being deprecated for two main reasons: It
has what are likely unfixable bugs, such as C<$\cI> not working as an
alias for C<$^I>, and their usage not being portable to non-ASCII
platforms: While C<$^T> will work everywhere, C<\cT> is whitespace in
EBCDIC.

=head2 Module removals

XXX Remove this section if inapplicable.

The following modules will be removed from the core distribution in a
future release, and will at that time need to be installed from CPAN.
Distributions on CPAN which require these modules will need to list them as
prerequisites.

The core versions of these modules will now issue C<"deprecated">-category
warnings to alert you to this fact.  To silence these deprecation warnings,
install the modules in question from CPAN.

Note that these are (with rare exceptions) fine modules that you are encouraged
to continue to use.  Their disinclusion from core primarily hinges on their
necessity to bootstrapping a fully functional, CPAN-capable Perl installation,
not usually on concerns over their design.

=over

XXX Note that deprecated modules should be listed here even if they are listed
as an updated module in the L</Modules and Pragmata> section.

=back

[ List each other deprecation as a =head2 entry ]

=head1 Performance Enhancements

=over 4

=item *

The trie performance enhancement for regular expressions has now been
extended to those compiled under C</iaa>.

=back

=head1 Modules and Pragmata

XXX All changes to installed files in F<cpan/>, F<dist/>, F<ext/> and F<lib/>
go here.  If Module::CoreList is updated, generate an initial draft of the
following sections using F<Porting/corelist-perldelta.pl>, which prints stub
entries to STDOUT.  Results can be pasted in place of the '=head2' entries
below.  A paragraph summary for important changes should then be added by hand.
In an ideal world, dual-life modules would have a F<Changes> file that could be
cribbed.

[ Within each section, list entries as a =item entry ]

=head2 New Modules and Pragmata

=over 4

=item *

XXX

=back

=head2 Updated Modules and Pragmata

=over 4

=item *

L<B> has been upgraded from version 1.45 to 1.46.

The fix for [perl #118525] introduced a regression in the behaviour of
C<B::CV::GV>, changing the return value from a C<B::SPECIAL> object on
a C<NULL> C<CvGV> to C<undef>.  C<B::CV::GV> again returns a
C<B::SPECIAL> object in this case. [perl #119351]

=item *

L<B::Concise> has been upgraded from version 0.98 to 0.99.

The handling of the C<glob> operator, broken since Perl 5.17.6, has been fixed.

=item *

L<Carp> has been upgraded from version 1.31 to 1.32.

=over 4

=item *

In stack traces, subroutine arguments that are strings are now quoted
in a consistent manner, regardless of what characters they contain and
how they're internally represented.

=item *

C<Carp> now won't vivify the C<overload::StrVal> glob or subroutine or the
C<overload> stash.

=item *

C<Carp> now avoids some unwanted Unicode warnings on older Perls.  This
doesn't affect behaviour with current Perl.

=item *

C<Carp::Heavy> detects version mismatch with C<Carp>, to give a good
error message if a current (stub) C<Carp::Heavy> gets loaded by an old
C<Carp> that expects C<Carp::Heavy> to provide subroutines.

=back

=item *

L<Data::Dumper> has been upgraded from version 2.148 to 2.149.

This upgrade is part of a larger change to make the array interface 64-bit safe
by using SSize_t instead of I32 for array indices.

=item *

L<Devel::Peek> has been upgraded from version 1.13 to 1.14.

This upgrade is part of a larger change to preserve referential identity when
passing C<undef> to a subroutine by using NULL rather than &PL_sv_undef for
nonexistent array elements.

=item *

L<DynaLoader> has been upgraded from version 1.19 to 1.20.

The documentation now makes it clear, as has always been the case, that
C<dl_unload_file> is only called automatically to unload all loaded shared
objects if the perl interpreter was built with the C macro
DL_UNLOAD_ALL_AT_EXIT defined.

=item *

L<Encode> has been upgraded from version 2.52 to 2.54.

An erroneous early return in C<decode_utf8> has been removed, and a bug in
C<_utf8_on> under COW has been fixed.

=item *

L<ExtUtils::MakeMaker> has been upgraded from version 6.72 to 6.74.

Numerous updates and bug fixes are incorporated.  See the F<Changes> file for
full details.

=item *

L<ExtUtils::ParseXS> has been upgraded from version 3.21 to 3.22.

No changes have been made other than the version bump to keep in sync with the
latest CPAN release.

=item *

L<File::Glob> has been upgraded from version 1.20 to 1.21.

C<glob()> now warns in the context of C<use warnings "syscalls";> if
the supplied pattern has an internal NUL (C<"\0">) character.

=item *

L<IPC::Open3> has been upgraded from 1.15 to 1.16.

This upgrade is part of a larger change to preserve referential identity when
passing C<undef> to a subroutine by using NULL rather than &PL_sv_undef for
nonexistent array elements.

=item *

L<Math::BigInt> has been upgraded from version 1.9992 to 1.9993.

Cleaned up the L<Math::BigInt> and L<Math::BigFloat> documentation to
be more consistent with other perl documentation. [perl #86686]

Added a bint() method for rounding towards zero. [perl #85296]

=item *

L<Math::BigInt::FastCalc> has been upgraded from version 0.30 to 0.31.

This upgrade is part of a larger change to make the array interface 64-bit safe
by using SSize_t instead of I32 for array indices.

=item *

L<Module::CoreList> has been upgraded from version 2.97 to 2.98.

The list of Perl versions covered has been updated.

=item *

L<Module::Load::Conditional> has been upgraded from version 0.54 to 0.56.

C<requires> has been made more robust. [cpan #83728]

=item *

L<Module::Metadata> has been upgraded from version 1.000014 to 1.000016.

The module's DESCRIPTION has been re-worded regarding safety/security to
satisfy CVE-2013-1437.

=item *

L<mro> has been upgraded from 1.13 to 1.14.

This upgrade is part of a larger change to make the array interface 64-bit safe
by using SSize_t instead of I32 for array indices.

=item *

L<Perl::OSType> has been upgraded from version 1.003 to 1.004.

The Unix OSType 'bitrig' has been added.

=item *

L<re> has been upgraded from version 0.25 to 0.26.

A function signature has been corrected in the XS implementation.

=item *

L<Storable> has been upgraded from version 2.46 to 2.47.

This upgrade is part of a larger change to preserve referential identity when
passing C<undef> to a subroutine by using NULL rather than &PL_sv_undef for
nonexistent array elements.

=item *

L<warnings> has been upgraded from version 1.18 to 1.19.

The C<syscalls> warnings category has been added to check for embedded NUL
(C<"\0">) characters in pathnames and string arguments to other system calls.

=item *

L<XS::Typemap> has been upgraded from version 0.10 to 0.11.

=back

=head2 Removed Modules and Pragmata

=over 4

=item *

XXX

=back

=head1 Documentation

XXX Changes to files in F<pod/> go here.  Consider grouping entries by
file and be sure to link to the appropriate page, e.g. L<perlfunc>.

=head2 New Documentation

XXX Changes which create B<new> files in F<pod/> go here.

=head3 L<XXX>

XXX Description of the purpose of the new file here

=head2 Changes to Existing Documentation

XXX Changes which significantly change existing files in F<pod/> go here.
However, any changes to F<pod/perldiag.pod> should go in the L</Diagnostics>
section.

=head3 L<XXX>

=over 4

=item *

XXX Description of the change here

=back

=head1 Diagnostics

The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see L<perldiag>.

XXX New or changed warnings emitted by the core's C<C> code go here.  Also
include any changes in L<perldiag> that reconcile it to the C<C> code.

=head2 New Diagnostics

XXX Newly added diagnostic messages go under here, separated into New Errors
and New Warnings

=head3 New Errors

=over 4

=item *

XXX L<message|perldiag/"message">

=back

=head3 New Warnings

=over 4

=item *

L<Invalid \0 character in %s for %s: %s\0%s|perldiag/"Invalid \0 character in %s for %s: %s\0%s">

(W syscalls) Embedded \0 characters in pathnames or other system call arguments
produce a warning as of 5.20. The parts after the \0 were formerly ignored by
system calls.

=back

=head2 Changes to Existing Diagnostics

XXX Changes (i.e. rewording) of diagnostic messages go here

=over 4

=item *

XXX Describe change here

=back

=head1 Utility Changes

XXX Changes to installed programs such as F<perlbug> and F<xsubpp> go here.
Most of these are built within the directories F<utils> and F<x2p>.

[ List utility changes as a =head3 entry for each utility and =item
entries for each change
Use L<XXX> with program names to get proper documentation linking. ]

=head3 L<find2perl>

=over 4

=item *

L<find2perl> now handles C<?> wildcards correctly. [perl #113054]

=back

=head1 Configuration and Compilation

XXX Changes to F<Configure>, F<installperl>, F<installman>, and analogous tools
go here.  Any other changes to the Perl build process should be listed here.
However, any platform-specific changes should be listed in the
L</Platform Support> section, instead.

[ List changes as a =item entry ].

=over 4

=item *

The F<Makefile.PL> for C<SDBM_File> now generates a better F<Makefile>,
which avoids a race condition during parallel makes, which could cause the
build to fail. This is the last known parallel make problem (on *nix
platforms), and therefore we believe that a parallel make should now always
be error free.

=for comment

Strictly only for a build where build files such as F<Makefile.SH> have not
been updated by C<git> in an already configured and built tree.

=back

=head1 Testing

XXX Any significant changes to the testing of a freshly built perl should be
listed here.  Changes which create B<new> files in F<t/> go here as do any
large changes to the testing harness (e.g. when parallel testing was added).
Changes to existing files in F<t/> aren't worth summarizing, although the bugs
that they represent may be covered elsewhere.

[ List each test improvement as a =item entry ]

=over 4

=item *

The test script F<t/bigmem/regexp.t> has been added to test that regular
expression matches on very large strings now succeed as expected.

=item *

Various cases of C<die>, C<last>, C<goto> and C<exit> triggering C<DESTROY> are
now tested by the new test script F<t/op/rt119311.t>.

=item *

The new test script F<t/win32/signal.t> tests that C<$!> and C<$^E> are now
preserved across signal handlers by the Win32 signal emulation code.

=item *

The test script F<t/x2p/find2perl.t> has been added to test the F<find2perl>
program on platforms where it is practical to do so.

=back

=head1 Platform Support

XXX Any changes to platform support should be listed in the sections below.

[ Within the sections, list each platform as a =item entry with specific
changes as paragraphs below it. ]

=head2 New Platforms

XXX List any platforms that this version of perl compiles on, that previous
versions did not.  These will either be enabled by new files in the F<hints/>
directories, or new subdirectories and F<README> files at the top level of the
source tree.

=over 4

=item Bitrig

Compile support has been added for Bitrig, a fork of OpenBSD

=back

=head2 Discontinued Platforms

XXX List any platforms that this version of perl no longer compiles on.

=over 4

=item XXX-some-platform

XXX

=back

=head2 Platform-Specific Notes

XXX List any changes for specific platforms.  This could include configuration
and compilation changes or changes in portability/compatibility.  However,
changes within modules for platforms should generally be listed in the
L</Modules and Pragmata> section.

=over 4

=item WinCE

The building of XS modules has largely been restored. Several still cannot
(yet) be built but it is now possible to build Perl on WinCE with only a couple
of further patches (to L<Socket> and L<ExtUtils::MakeMaker>), hopefully to be
incorporated soon.

=back

=head1 Internal Changes

XXX Changes which affect the interface available to C<XS> code go here.  Other
significant internal changes for future core maintainers should be noted as
well.

[ List each change as a =item entry ]

=over 4

=item *

XXX

=back

=head1 Selected Bug Fixes

XXX Important bug fixes in the core language are summarized here.  Bug fixes in
files in F<ext/> and F<lib/> are best summarized in L</Modules and Pragmata>.

[ List each fix as a =item entry ]

=over 4

=item *

The value of C<$^E> is now saved across signal handlers on
Win32. [perl #85104]

=back

=head1 Known Problems

XXX Descriptions of platform agnostic bugs we know we can't fix go here.  Any
tests that had to be C<TODO>ed for the release would be noted here.  Unfixed
platform specific bugs also go here.

[ List each fix as a =item entry ]

=over 4

=item *

XXX

=back

=head1 Obituary

XXX If any significant core contributor has died, we've added a short obituary
here.

=head1 Acknowledgements

XXX Generate this with:

  perl Porting/acknowledgements.pl v5.19.3..HEAD

=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles recently
posted to the comp.lang.perl.misc newsgroup and the perl bug database at
http://rt.perl.org/perlbug/ .  There may also be information at
http://www.perl.org/ , the Perl Home Page.

If you believe you have an unreported bug, please run the L<perlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

If the bug you are reporting has security implications, which make it
inappropriate to send to a publicly archived mailing list, then please send it
to perl5-security-report@perl.org.  This points to a closed subscription
unarchived mailing list, which includes all the core committers, who will be
able to help assess the impact of issues, figure out a resolution, and help
co-ordinate the release of patches to mitigate or fix the problem across all
platforms on which Perl is supported.  Please only use this address for
security issues in the Perl core, not for modules independently distributed on
CPAN.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
